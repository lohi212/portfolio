{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","component/page2/constants.js","component/page2/index.jsx","component/manageaccounts/index.jsx","routes.jsx","index.js"],"names":["App","history","useHistory","className","onClick","push","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CATEGORIES","text","subCategories","label","value","route","Categories","props","useState","localStorage","getItem","JSON","parse","recentRoutes","setRecentRoutes","handleRoutesClick","subCategory","routes","routesArr","routeIndex","indexOf","removedRoute","splice","length","removeItem","setItem","stringify","map","category","menuButton","style","display","justifyContent","alignItems","borderRadius","border","padding","background","width","reverse","subCat","ManageAccounts","WithHeader","component","backgroundColor","position","top","right","left","marginTop","RoutesManager","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.67560eec.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  const history = useHistory();\n\n  function handleNavigate() {\n    history.push('/page2');\n  }\n  return (\n    <div className=\"App\">\n      <button onClick={handleNavigate}>Navigate</button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const CATEGORIES = [\n  {\n    text: \"Home\",\n    subCategories: []\n  },\n  {\n    text: \"Recents\",\n    subCategories: []\n  },\n  {\n    text: \"Prospects Management\",\n    subCategories: [\n      { label: \"Add Prospects Record\", value: \"add_prospect_record\", route: 'add-prospects-record' },\n      {\n        label: \"Prospects Record ListView\", route: 'prospects-record-listview',\n        value: \"prospects_record_listview\"\n      },\n      { label: \"Enrichment Queue\", value: \"enrichment_queue\", route: 'enrichment-queue', }\n    ]\n  },\n  {\n    text: \"Account Management\",\n        subCategories: [\n      { label: \"Manage Accounts\", value: \"manage_accounts\", route: 'manage-accounts' },\n    ]\n  },\n  {\n    text: \"Configuration Management\",\n    subCategories: []\n  },\n  {\n    text: \"Setup\",\n    subCategories: []\n  }\n];\n","import React, { useState } from \"react\";\nimport { Menu, MenuItem, MenuButton } from \"@szhsin/react-menu\";\nimport { useHistory } from \"react-router-dom\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport \"@szhsin/react-menu/dist/index.css\";\nimport { CATEGORIES } from \"./constants\";\nimport \"./styles.css\";\n\nfunction Categories(props) {\n\n    const [recentRoutes, setRecentRoutes] = useState(localStorage.getItem('routes') ? JSON.parse(localStorage.getItem('routes')) : []);\n    const history = useHistory();\n\n    function handleRoutesClick(subCategory) {\n        const routes = localStorage.getItem('routes');\n        let routesArr = [];\n        let routeIndex = 0;\n        if (routes) {\n            routeIndex = JSON.parse(routes).indexOf(subCategory.route);\n            routesArr = [...JSON.parse(routes)];\n            let removedRoute = [];\n            if (routeIndex !== -1) {\n                removedRoute = routesArr.splice(routeIndex, 1);\n                routesArr.push(subCategory.route);\n            } else {\n                if (routesArr.length < 3) {\n                    routesArr.push(subCategory.route);\n                } else {\n                    removedRoute = routesArr.splice(0, 1);\n                    routesArr.push(subCategory.route);\n                }\n            }\n            if (removedRoute.length && routeIndex === -1) {\n                localStorage.removeItem(removedRoute[0]);\n            } \n        } else {\n            routesArr = [subCategory.route]\n        }\n\n        setRecentRoutes(routesArr);\n        localStorage.setItem('routes', JSON.stringify(routesArr)); \n        localStorage.setItem(subCategory.route, JSON.stringify(subCategory));\n        history.push(`/${subCategory.route}`);\n           \n    }\n\n    function  renderRecentRoutes() {\n        return [...recentRoutes].reverse().map(route => {\n            const subCat = JSON.parse(localStorage.getItem(route));\n            return <MenuItem onClick={() => handleRoutesClick(subCat)}>{subCat.label}</MenuItem>\n        })\n    }\n\n    return (\n        <div className=\"categories-container\">\n        {CATEGORIES.map((category) => (\n            <Menu\n            menuButton={\n                <div\n                style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\"\n                }}\n                >\n                <button\n                    style={{\n                        borderRadius: 0,\n                        border: \"none\",\n                        padding: 10,\n                        background: \"#fff\"\n                    }}\n                >\n                    {category.text}\n                </button>\n                <ArrowDropDownIcon />\n                </div>\n            }\n            style={{ width: 200 }}\n            >\n            {\n                category.text === 'Recents' && renderRecentRoutes()\n            }\n            {\n                category.subCategories.length > 0 &&\n                category.subCategories.map((subCategory) => <MenuItem onClick={() => handleRoutesClick(subCategory)}>{subCategory.label}</MenuItem>)\n            }\n            \n            </Menu>\n        ))}\n        </div>\n    );\n}\n\nexport default Categories;\n","import React from 'react';\n\nfunction  ManageAccounts() {\n    return (\n        <div>\n            <p>manage accounts</p>\n        </div>\n    );\n}\n\nexport default ManageAccounts;","import React from 'react';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Page2 from './component/page2/';\nimport App from './App';\nimport Category from './component/page2/';\nimport ManageAccounts from './component/manageaccounts/';\n\nfunction  WithHeader({ component, background }) {\n    return (\n         <div style={{ backgroundColor: background }}>\n            <div style={{ position: 'fixed', top: 0, right: 0, left: 0}}>\n                <Category />\n            </div>   \n            <div style={{ marginTop: 100 }}>\n                {component}\n            </div>    \n        </div>  \n    )\n}\n\nfunction RoutesManager() {\n    return (\n        <Router>\n            <Switch>\n            <Route path=\"/page2\"> \n                <Page2 />\n            </Route>\n            <Route path=\"/manage-accounts\">\n                <WithHeader component={<ManageAccounts />} background=\"red\" />\n            </Route>\n            <Route path=\"/\">\n                <WithHeader component={<App />} background=\"blue\" />  \n            </Route>\n            </Switch>\n        </Router>\n    )\n}\n\nexport default RoutesManager;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport RoutesManager from './routes';\n\nReactDOM.render(\n    <RoutesManager />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}